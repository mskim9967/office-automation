{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["ipcRenderer","window","require","h1Style","fontSize","fontWeight","color","marginTop","marginBottom","disable","pointerEvents","opacity","transition","enable","App","timer","darkTheme","createTheme","palette","mode","useState","funcTabIdx","setFuncTabIdx","retailers","setRetailers","dataDirPath","setDataDirPath","selectedRetailerCode","setSelectedRetailerCode","startWeek","setStartWeek","endWeek","setEndWeek","isStartWeekValid","setStartWeekValid","isEndWeekValid","setEndWeekValid","isGfiFileLoaded","setGfiFileLoaded","retailerGfiFiles","setRetailerGfiFiles","selectedGfiFiles","setSelectedGfiFiles","on","event","Object","values","useEffect","test","clearTimeout","setTimeout","send","temp","forEach","e","size","parseFloat","toFixed","isDefault","push","id","ThemeProvider","theme","className","style","display","flexDirection","width","height","Box","sx","bgcolor","Tabs","value","onChange","i","centered","Tab","label","flex","padding","overflow","justifyContent","TextField","defaultValue","InputProps","readOnly","onClick","FormControl","fullWidth","InputLabel","Select","target","map","MenuItem","textAlign","code","name","error","helperText","variant","length","Divider","orientation","headerHeight","rows","columns","field","headerName","checkboxSelection","selectionModel","onSelectionModelChange","hideFooterPagination","rowHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27d0b8a5.chunk.js","sourcesContent":["import React, { useEffect, useState, CSSProperties } from 'react';\n\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\n\nimport Box from '@mui/material/Box';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from 'mui-button';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport SendIcon from '@mui/icons-material/Send';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Divider from '@mui/material/Divider';\n\nconst { ipcRenderer } = window.require('electron');\n\nfunction App() {\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n    },\n  });\n  const lightTheme = createTheme({\n    palette: {\n      mode: 'light',\n    },\n  });\n\n  const [funcTabIdx, setFuncTabIdx] = useState(0);\n\n  const [retailers, setRetailers] = useState<any[]>([]);\n\n  const [dataDirPath, setDataDirPath] = useState(null);\n  const [selectedRetailerCode, setSelectedRetailerCode] = useState<any>(null);\n  const [startWeek, setStartWeek] = useState<any>('');\n  const [endWeek, setEndWeek] = useState<any>('');\n  const [isStartWeekValid, setStartWeekValid] = useState<any>(false);\n  const [isEndWeekValid, setEndWeekValid] = useState<any>(false);\n  const [isGfiFileLoaded, setGfiFileLoaded] = useState<any>(false);\n\n  const [retailerGfiFiles, setRetailerGfiFiles] = useState<any[]>([]);\n\n  const [selectedGfiFiles, setSelectedGfiFiles] = useState<any[]>([]);\n  const columns = [\n    { field: 'name', headerName: 'File Name', width: 210 },\n    { field: 'size', headerName: 'Size', width: 80 },\n    { field: 'week', headerName: 'Week', width: 80 },\n    { field: 'version', headerName: 'Ver', width: 60 },\n  ];\n\n  ipcRenderer.on('dataDirPathSetted', (event: any, { dataDirPath, retailers }: any) => {\n    setDataDirPath(dataDirPath);\n    setRetailers(Object.values(retailers));\n  });\n\n  ipcRenderer.on('gfiFileSelected', (event: any, retailerGfiFiles: any) => {\n    setRetailerGfiFiles(retailerGfiFiles);\n  });\n\n  useEffect(() => {\n    setSelectedRetailerCode(null);\n  }, [dataDirPath]);\n\n  useEffect(() => {\n    setStartWeek('');\n    setEndWeek('');\n  }, [selectedRetailerCode]);\n\n  useEffect(() => {\n    setStartWeekValid(/^(\\d{4})$/.test(startWeek));\n    setEndWeekValid(/^(\\d{4})$/.test(endWeek));\n  }, [startWeek, endWeek]);\n\n  let timer: any;\n  useEffect(() => {\n    setRetailerGfiFiles([]);\n    setGfiFileLoaded(false);\n    clearTimeout(timer);\n    if (isStartWeekValid && isEndWeekValid) {\n      timer = setTimeout(() => {\n        ipcRenderer.send('selectGfiFile', { selectedRetailerCode, startWeek, endWeek });\n        setGfiFileLoaded(true);\n      }, 500);\n    }\n  }, [isStartWeekValid, isEndWeekValid]);\n\n  useEffect(() => {\n    let temp: any[] = [];\n    retailerGfiFiles.forEach((e: any) => {\n      e.size = parseFloat((e.size / 1000000.0).toFixed(1)) + '(MB)';\n      e.isDefault && temp.push(e.id);\n    });\n    setSelectedGfiFiles(temp);\n  }, [retailerGfiFiles]);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className='App' style={{ display: 'flex', flexDirection: 'column', width: '100vw', height: '100vh' }}>\n        <Box sx={{ width: '100vw', bgcolor: 'background.paper', color: 'text.primary' }}>\n          <Tabs value={funcTabIdx} onChange={(e, i) => setFuncTabIdx(i)} centered>\n            <Tab label='Merge GFI' />\n            <Tab label='Item Two' />\n            <Tab label='Item Three' />\n          </Tabs>\n        </Box>\n\n        <Box sx={{ flex: 1, padding: 2, overflow: 'scroll', bgcolor: 'background.paper', display: 'flex' }}>\n          <Box sx={{ flex: 1, padding: 5, display: 'flex', flexDirection: 'column', justifyContent: 'space-evenly' }}>\n            <div>\n              <Box sx={{ ...h1Style, marginTop: 0 }}>Select Data Directory Path</Box>\n              <TextField\n                defaultValue='click to set path'\n                InputProps={{\n                  readOnly: true,\n                }}\n                size='small'\n                sx={{ width: '100%' }}\n                onClick={() => ipcRenderer.send('setDataDirPath')}\n                value={dataDirPath}\n              />\n            </div>\n\n            <div style={{ ...(dataDirPath ? { ...enable } : { ...disable }) }}>\n              <Box sx={h1Style}>Select Retailer</Box>\n              <FormControl fullWidth>\n                <InputLabel>Retailer</InputLabel>\n                <Select\n                  style={{}}\n                  label='Retailer'\n                  value={selectedRetailerCode}\n                  size='small'\n                  onChange={(e) => setSelectedRetailerCode(e.target.value)}\n                >\n                  {retailers.map((e) => {\n                    return <MenuItem style={{ display: 'block', textAlign: 'center' }} value={e.code}>{`${e.code} - ${e.name} \\n`}</MenuItem>;\n                  })}\n                </Select>\n              </FormControl>\n            </div>\n\n            <div style={{ width: '100%', display: 'flex', height: '150px' }}>\n              <div style={{ ...(selectedRetailerCode ? { ...enable } : { ...disable }), flex: 1, transition: 'opacity 1s' }}>\n                <Box sx={h1Style}>Start Week</Box>\n                <TextField\n                  error={!isStartWeekValid && startWeek !== ''}\n                  label='YYMM'\n                  helperText={!isStartWeekValid && startWeek !== '' && 'Format must be YYMM'}\n                  size='small'\n                  style={{ width: '100%' }}\n                  onChange={(e) => setStartWeek(e.target.value)}\n                  value={startWeek}\n                />\n              </div>\n              <div style={{ width: '20px' }} />\n              <div style={{ ...(selectedRetailerCode ? { ...enable } : { ...disable }), flex: 1 }}>\n                <Box sx={h1Style}>End Week</Box>\n                <TextField\n                  error={!isEndWeekValid && endWeek !== ''}\n                  label='YYMM'\n                  helperText={!isEndWeekValid && endWeek !== '' && 'Format must be YYMM'}\n                  size='small'\n                  style={{ width: '100%' }}\n                  onChange={(e) => setEndWeek(e.target.value)}\n                  value={endWeek}\n                />\n              </div>\n            </div>\n\n            <Button\n              variant={isGfiFileLoaded && selectedGfiFiles.length ? 'contained' : 'outlined'}\n              color={isGfiFileLoaded && selectedGfiFiles.length ? 'primary' : 'error'}\n              style={{ ...(isGfiFileLoaded && selectedGfiFiles.length ? { ...enable } : { ...disable }), width: '100%' }}\n              onClick={() => ipcRenderer.send('mergeGfiFiles', { selectedGfiFiles })}\n            >\n              Merge GFI Files\n            </Button>\n          </Box>\n\n          <Divider sx={{}} orientation='vertical'></Divider>\n          <Box sx={{ flex: 1, padding: 5, display: 'flex', flexDirection: 'column' }}>\n            <div style={{ ...(isGfiFileLoaded ? { ...enable } : { ...disable }), height: '100%', display: 'flex', flexDirection: 'column' }}>\n              <Box sx={{ ...h1Style, marginTop: 0 }}>Select GFI Files</Box>\n              <div style={{ flex: 1, width: '100%', overflow: 'scroll' }}>\n                <DataGrid\n                  headerHeight={40}\n                  rows={retailerGfiFiles}\n                  columns={columns}\n                  checkboxSelection\n                  selectionModel={isGfiFileLoaded && selectedGfiFiles}\n                  onSelectionModelChange={(e) => {\n                    setSelectedGfiFiles(e);\n                  }}\n                  hideFooterPagination={true}\n                  rowHeight={30}\n                />\n              </div>\n            </div>\n          </Box>\n        </Box>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nconst h1Style: CSSProperties = { fontSize: 30, fontWeight: '600', color: 'text.primary', marginTop: 4, marginBottom: 2 };\nconst disable: CSSProperties = { pointerEvents: 'none', opacity: 0.2, transition: 'opacity 0.6s' };\nconst enable: CSSProperties = { pointerEvents: 'auto', opacity: 1, transition: 'opacity 0.6s' };\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}